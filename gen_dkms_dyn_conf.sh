#!/bin/bash

mod_dir='./v4l'
mod_pattern='*.ko'
mod_dest_location="/updates/dkms"

mod_name_top_config="dvb-core.ko"


err_ok=0
err_usage=1
err_dir_not_found=2
err_default=10

# Index 0 is the dvb-core.ko module defined in the top DKMS
# configuration file. So mod_idx needs to be incremented before use.
mod_idx=0

function exit_print {
    if [ -z "${2}" ] ; then
        code=${err_default}
    else
        code=${2}
    fi

    echo "${1}"
    exit ${code}
}

function err_exit {
    exit_print "Error: ${1}" ${2}
}

function usage {
	exit_print "Usage: $0 <dkms_dyn_conf> [--help]" ${err_usage}
}

# Note: This function gets executed in a sub-shell (pipe in find_modules),
#       so it is not possible to use mod_idx later!
function found_module {
    mod_idx=$((mod_idx + 1))
    mod_name=$(basename ${1})
    if [ "${mod_name}" != "${mod_name_top_config}" ] ; then
        echo "BUILT_MODULE_NAME[${mod_idx}]=${mod_name}"             >> ${dkms_dyn_conf}
        echo "BUILT_MODULE_LOCATION[${mod_idx}]=${mod_dir}"          >> ${dkms_dyn_conf}
        echo "DEST_MODULE_LOCATION[${mod_idx}]=${mod_dest_location}" >> ${dkms_dyn_conf}
    fi
}

function find_modules {
    find ${mod_dir} -name ${mod_pattern} | while read file; do found_module "$file"; done
}

# main

if [ $# -lt 1 ] ; then
    usage
fi

if [ "${1}" = "--help" ] ; then
    usage
fi

dkms_dyn_conf=${1}
shift

# First check, if the directory of the generated file
# does already exist
dkms_dyn_conf_dir=$(dirname ${dkms_dyn_conf})
if [ ! -d ${dkms_dyn_conf_dir=} ] ; then
	err_exit "Target directory doesn't exist!" ${err_dir_not_found}
fi

# we generate it always new
rm -f ${dkms_dyn_conf}
echo "#"                                > ${dkms_dyn_conf}
echo "# Generated by $(basename ${0})" >> ${dkms_dyn_conf}
echo "# at $(date -R)"                 >> ${dkms_dyn_conf}
echo "#"                               >> ${dkms_dyn_conf}

find_modules

exit_print "Done!" ${err_ok}

